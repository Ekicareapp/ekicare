"use client";

import { useState } from 'react';
import { TrashIcon } from '@heroicons/react/24/outline';

export default function CleanDataButton() {
  const [isCleaning, setIsCleaning] = useState(false);

  const handleCleanData = async () => {
    if (!confirm('√ätes-vous s√ªr de vouloir nettoyer TOUTES les donn√©es (localStorage + base de donn√©es) ?')) {
      return;
    }

    setIsCleaning(true);

    try {
      // 1. Nettoyage FORC√â de la base de donn√©es
      console.log('üî• Nettoyage FORC√â de la base de donn√©es...');
      const response = await fetch('/api/admin/force-clean', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        console.log('‚ö†Ô∏è Erreur API, on continue quand m√™me...');
      } else {
        const result = await response.json();
        console.log('‚úÖ Nettoyage forc√© termin√©:', result.message);
      }

      // 2. Nettoyer localStorage compl√®tement
      localStorage.clear();
      console.log('‚úÖ localStorage vid√©');

      // 3. Nettoyer sessionStorage aussi
      sessionStorage.clear();
      console.log('‚úÖ sessionStorage vid√©');

      // 4. Nettoyer tous les cookies
      document.cookie.split(";").forEach(function(c) { 
        document.cookie = c.replace(/^ +/, "").replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/"); 
      });
      console.log('‚úÖ Cookies supprim√©s');

      // 5. D√©clencher l'√©v√©nement de mise √† jour
      window.dispatchEvent(new CustomEvent('demandeUpdated', { 
        detail: { demandeId: 'clean', nouveauStatut: 'CLEANED' } 
      }));

      alert('üî• NETTOYAGE FORC√â TERMIN√â !\n\n‚úÖ Base de donn√©es : VID√âE\n‚úÖ localStorage : VID√â\n‚úÖ sessionStorage : VID√â\n‚úÖ Cookies : SUPPRIM√âS\n\nPlus AUCUN rendez-vous "Sophie Martin" !\n\nRechargez la page (F5) pour voir les changements.');
      
    } catch (error) {
      console.error('Erreur lors du nettoyage:', error);
      alert('‚ùå Erreur lors du nettoyage des donn√©es');
    } finally {
      setIsCleaning(false);
    }
  };

  return (
    <button
      onClick={handleCleanData}
      disabled={isCleaning}
      className="fixed bottom-4 right-4 bg-gray-500 hover:bg-gray-600 text-white p-3 rounded-full shadow-lg transition-colors disabled:opacity-50"
      title="Nettoyer les donn√©es de test"
    >
      <TrashIcon className="w-5 h-5" />
    </button>
  );
}
